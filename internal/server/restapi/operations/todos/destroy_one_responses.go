// Code generated by go-swagger; DO NOT EDIT.

package todos

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/sirupsen/logrus"

	models "github.com/IAD/go-swagger-template-example/internal/server/models"
)

// DestroyOneNoContentCode is the HTTP code returned for type DestroyOneNoContent
const DestroyOneNoContentCode int = 204

/*DestroyOneNoContent Deleted

swagger:response destroyOneNoContent
*/
type DestroyOneNoContent struct {
}

// NewDestroyOneNoContentFunc is declaration for func that create response
type NewDestroyOneNoContentFunc func() *DestroyOneNoContent

// NewDestroyOneNoContent creates DestroyOneNoContent with default headers values
func NewDestroyOneNoContent() *DestroyOneNoContent {

	return &DestroyOneNoContent{}
}

// WriteResponse to the client
func (o *DestroyOneNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// DestroyOneNotFoundCode is the HTTP code returned for type DestroyOneNotFound
const DestroyOneNotFoundCode int = 404

/*DestroyOneNotFound Not Found

swagger:response destroyOneNotFound
*/
type DestroyOneNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDestroyOneNotFoundFunc is declaration for func that create response
type NewDestroyOneNotFoundFunc func() *DestroyOneNotFound

// NewDestroyOneNotFound creates DestroyOneNotFound with default headers values
func NewDestroyOneNotFound() *DestroyOneNotFound {

	return &DestroyOneNotFound{}
}

// WithPayload adds the payload to the destroy one not found response
func (o *DestroyOneNotFound) WithPayload(payload *models.Error) *DestroyOneNotFound {
	o.Payload = payload
	return o
}

// WithErr adds the Error payload with a default code to the destroy one not found response
func (o *DestroyOneNotFound) WithErr(err error) *DestroyOneNotFound {
	type swaggerErr interface {
		Plain() (code string, message string, attributes map[string]string)
	}

	if swaggerErr, ok := err.(swaggerErr); ok {
		code, message, attributes := swaggerErr.Plain()

		o.Payload = &models.Error{
			Code:       code,
			Message:    message,
			Attributes: attributes,
		}
		return o
	}

	return o.WithError("500", err.Error())
}

// WithError  adds the Error payload to the destroy one not found response
func (o *DestroyOneNotFound) WithError(code string, message string) *DestroyOneNotFound {
	o.Payload = &models.Error{
		Attributes: nil,
		Code:       code,
		Message:    message,
	}
	return o
}

// SetPayload sets the payload to the destroy one not found response
func (o *DestroyOneNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DestroyOneNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			logrus.Panic(err) // let the recovery middleware deal with this
		}
	}
}

// DestroyOneInternalServerErrorCode is the HTTP code returned for type DestroyOneInternalServerError
const DestroyOneInternalServerErrorCode int = 500

/*DestroyOneInternalServerError Internal Error

swagger:response destroyOneInternalServerError
*/
type DestroyOneInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDestroyOneInternalServerErrorFunc is declaration for func that create response
type NewDestroyOneInternalServerErrorFunc func() *DestroyOneInternalServerError

// NewDestroyOneInternalServerError creates DestroyOneInternalServerError with default headers values
func NewDestroyOneInternalServerError() *DestroyOneInternalServerError {

	return &DestroyOneInternalServerError{}
}

// WithPayload adds the payload to the destroy one internal server error response
func (o *DestroyOneInternalServerError) WithPayload(payload *models.Error) *DestroyOneInternalServerError {
	o.Payload = payload
	return o
}

// WithErr adds the Error payload with a default code to the destroy one internal server error response
func (o *DestroyOneInternalServerError) WithErr(err error) *DestroyOneInternalServerError {
	type swaggerErr interface {
		Plain() (code string, message string, attributes map[string]string)
	}

	if swaggerErr, ok := err.(swaggerErr); ok {
		code, message, attributes := swaggerErr.Plain()

		o.Payload = &models.Error{
			Code:       code,
			Message:    message,
			Attributes: attributes,
		}
		return o
	}

	return o.WithError("500", err.Error())
}

// WithError  adds the Error payload to the destroy one internal server error response
func (o *DestroyOneInternalServerError) WithError(code string, message string) *DestroyOneInternalServerError {
	o.Payload = &models.Error{
		Attributes: nil,
		Code:       code,
		Message:    message,
	}
	return o
}

// SetPayload sets the payload to the destroy one internal server error response
func (o *DestroyOneInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DestroyOneInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			logrus.Panic(err) // let the recovery middleware deal with this
		}
	}
}
