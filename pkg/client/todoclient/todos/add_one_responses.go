// Code generated by go-swagger; DO NOT EDIT.

package todos

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"io/ioutil"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	todoclientmodels "github.com/IAD/go-swagger-template-example/pkg/client/todoclientmodels"
)

// AddOneReader is a Reader for the AddOne structure.
type AddOneReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddOneReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewAddOneCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewAddOneInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		data, err := ioutil.ReadAll(response.Body())
		if err != nil {
			return nil, err
		}

		return nil, fmt.Errorf("Requested POST / returns an error %d: %s", response.Code(), string(data))
	}
}

// NewAddOneCreated creates a AddOneCreated with default headers values
func NewAddOneCreated() *AddOneCreated {
	return &AddOneCreated{}
}

/*AddOneCreated handles this case with default header values.

Created
*/
type AddOneCreated struct {
	Payload *todoclientmodels.Item
}

func (o *AddOneCreated) Error() string {
	return fmt.Sprintf("[POST /][%d] addOneCreated  %+v", 201, o.Payload)
}

func (o *AddOneCreated) GetPayload() *todoclientmodels.Item {
	return o.Payload
}

func (o *AddOneCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(todoclientmodels.Item)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddOneInternalServerError creates a AddOneInternalServerError with default headers values
func NewAddOneInternalServerError() *AddOneInternalServerError {
	return &AddOneInternalServerError{}
}

/*AddOneInternalServerError handles this case with default header values.

Internal Error
*/
type AddOneInternalServerError struct {
	Payload *todoclientmodels.Error
}

func (o *AddOneInternalServerError) Plain() (code string, message string, attributes map[string]string) {
	return o.Payload.Code, o.Payload.Message, o.Payload.Attributes
}

func (o *AddOneInternalServerError) Error() string {
	return fmt.Sprintf("[POST /][%d] addOneInternalServerError  %+v", 500, o.Payload)
}

func (o *AddOneInternalServerError) GetPayload() *todoclientmodels.Error {
	return o.Payload
}

func (o *AddOneInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(todoclientmodels.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
